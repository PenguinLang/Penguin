<Program> ::= <Function>+

<Function> ::= "function" <Identifier> <Parameter_List>? <Return_Type>? "{" <Statement>* "}"
<Parameter_List> ::= <Parameter> ("," <Parameter>)*
<Parameter> ::= <Type> <Identifier>
<Return_Type> ::= "returns" <Type>


<Expression> ::= <Literal> | <Identifier> | <Function_Call> | <Unary_Expression> | <Expression> <Binary_Operator> <Expression>
<Expression_List> ::= <Expression> ("," <Expression>)*
<Statement> ::= <Variable_Declaration> | <Assignment_Statement> | <Function_Call> | <Control_Flow_Statement> | <Loop_Statement> | <Return_Statement>


<Variable_Declaration> ::= "let" <Type> <Identifier> "=" <Expression> ";"
<Assignment_Statement> ::= <Identifier> "=" <Expression> ";"


<Control_Flow_Statement> ::= "if" <Expression> "{" <Statement>* "}" <Else_If_Statement>* <Else_Statement>?
<Else_If_Statement> ::= "else" "if" <Expression> "{" <Statement>* "}"
<Else_Statement> ::= "else" "{" <Statement>* "}"
<Loop_Statement> ::= "while" <Expression> "{" <Statement>* "}"
<Return_Statement> ::= "return" <Expression> ";"


<Type> ::= "number" | "string" | "character" | <Array_Type>
<Array_Type> ::= <Type> "[" "]" | <Type> "[" <Array_Size> "]"
<Array_Size> ::= <Integer_Literal>


<Literal> ::= <Number_Literal> | <String_Literal> | <Character_Literal> | <Array_Literal>
<Number_Literal> ::= <Integer_Literal> | <Float_Literal>
<String_Literal> ::= '"' <String_Content>* '"'
<String_Content> ::= <Character_Literal> | <Escape_Sequences>
<Character_Literal> ::= "'" <Char_Content> "'"
<Char_Content> ::= <ASCII_Character> | <Escape_Sequences>
<Escape_Sequences> ::= "\" | """ | "\n" | "\r" | "\t" | "\b" | "\f"


<Unary_Expression> ::= <Unary_Operator> <Expression>
<Unary_Operator> ::= "-" | "!"
<Binary_Operator> ::= "+" | "-" | "*" | "/" | "%" | "==" | "!=" | "<" | "<=" | ">" | ">=" | "&&" | "||"


<Identifier> ::= <Letter> (<Letter> | <Digit>)*
<Letter> ::= [a-zA-Z]
<Digit> ::= [0-9]